/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package MyApp;


import de.htw.Algorithms.*;
import de.htw.CommandPattern.commands.GCDDivRestItCmd;
import de.htw.MyApp.App;
import org.junit.Assert;
import org.junit.Test;


import java.util.ArrayList;

import static org.junit.Assert.*;


public class AppTest {

    @Test
    public void GCDEuclidDivisionRestRec_check(){
        Assert.assertEquals(GCDEuclidDivisionRestRec.gcd(28,64), 4);
    }

    @Test
    public void GCDEuclidDivisionRestRec_check2(){
        Assert.assertEquals(GCDEuclidDivisionRestRec.gcd(24,12), 12);
    }

    @Test
    public void GCDEuclidSubtractionRec_check(){
        Assert.assertEquals(GCDEuclidSubtractionRec.gcd(24,12), 12);
    }
    @Test
    public void GCDEuclidSubtractionRec_check2(){
        Assert.assertEquals(GCDEuclidSubtractionRec.gcd(28,64), 4);
    }

    @Test
    public void GCDEuclidSubtractionIt_check(){
        Assert.assertEquals(GCDEuclidSubtractionIt.gcd(28,64), 4);
    }

    @Test
    public void GCDEuclidSubtractionIt_check2(){
        Assert.assertEquals(GCDEuclidSubtractionIt.gcd(24,12), 12);
    }
    @Test
    public void GCDDivRestIt_check(){
        Assert.assertEquals(GCDEuclidDivisionRestIt.gcd(28,64), 4);
    }

    @Test
    public void GCDDivRestIt_check2(){
        Assert.assertEquals(GCDEuclidDivisionRestIt.gcd(24,12), 12);
    }


    @Test
    public void SieveEratosthenes_Test(){

        SieveEratosthenes m = new SieveEratosthenes();

        ArrayList<Integer> checkliste = new ArrayList<Integer>();
        checkliste.add(2);
        checkliste.add(3);
        checkliste.add(5);
        checkliste.add(7);
        checkliste.add(11);
        Assert.assertEquals(m.primes(11),checkliste );
    }

    @Test
    public void StringMatchingAlgorithm_test1(){
        Assert.assertEquals(StringMatchingAlgorithm.match("I’m an egotistical bastard, and I name all my projects after myself. First ‘Linux’, now ‘Git’", "Git"),"It's a match! The text contains the given word or phrase");
    }
    @Test
    public void StringMatchingAlgorithm_test2(){
        Assert.assertEquals(StringMatchingAlgorithm.match("I’m an egotistical bastard, and I name all my projects after\n" +
                "myself. First ‘Linux’, now ‘Git’", "Bill Gates"),"Unfortunately the text does not contain the given word or phrase");
    }
    @Test
    public void StringMatchingAlgorithm_test3(){
        Assert.assertEquals(StringMatchingAlgorithm.match("Git’", "t’"),"It's a match! The text contains the given word or phrase");
    }


}
